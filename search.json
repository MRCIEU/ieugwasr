[{"path":"https://mrcieu.github.io/ieugwasr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Gibran Hemani Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/articles/guide.html","id":"authentication","dir":"Articles","previous_headings":"","what":"Authentication","title":"Perform fast queries against a massive database of complete GWAS summary data","text":"1st May 2024, queries OpenGWAS API require user authentication. information necessary, see blog post. authenticate, need generate token OpenGWAS website. token behaves like password, used authorise requests make OpenGWAS API. steps generate token ieugwasr automatically use queries: Login https://api.opengwas.io/profile/ Generate new token Add OPENGWAS_JWT=<token> .Renviron file. file either home directory working directory R session. can check location .Renviron file running Sys.getenv(\"R_ENVIRON_USER\") R. Restart R session check token recognised, run ieugwasr::get_opengwas_jwt(). returns long random string authenticated. check token working, run user(). make request API user information using token. return list user information. returns error, token working. Now query OpenGWAS automatically include token authorise request. IMPORTANT NOTE: share token others equivalent password. think token compromised, can generate new one OpenGWAS website.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/articles/guide.html","id":"deprecated-google-authentication","dir":"Articles","previous_headings":"Authentication","what":"Deprecated Google authentication","title":"Perform fast queries against a massive database of complete GWAS summary data","text":"Note previously used Google OAuth2 authentication, order users access private datasets specific access. authentication method longer supported, users now use JWT token method described . can delete ieugwasr_oauth2 directory longer needed.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/articles/guide.html","id":"allowance","dir":"Articles","previous_headings":"Authentication","what":"Allowance","title":"Perform fast queries against a massive database of complete GWAS summary data","text":"Due high usage, limit number queries can made given time period. Every user allowance reset periodically, used based queries submit. posing issue get touch can discuss manage . See full details allowance system: https://api.opengwas.io/api/#allowance.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/articles/guide.html","id":"general-api-queries","dir":"Articles","previous_headings":"","what":"General API queries","title":"Perform fast queries against a massive database of complete GWAS summary data","text":"API number endpoints documented . general way access R using api_query function. two types endpoints - GET POST. api_query(\"associations/ieu--2,ieu--7/rs234,rs123\") api_query(\"associations\", query=list(rsid=c(\"rs234\", \"rs123\"), id=c(\"ieu--2\", \"ieu--7\"))) api_query function returns response object httr package. See list functions make input output api_query convenient.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/articles/guide.html","id":"get-api-status","dir":"Articles","previous_headings":"","what":"Get API status","title":"Perform fast queries against a massive database of complete GWAS summary data","text":"","code":"library(ieugwasr) api_status()"},{"path":"https://mrcieu.github.io/ieugwasr/articles/guide.html","id":"get-list-of-all-available-studies","dir":"Articles","previous_headings":"","what":"Get list of all available studies","title":"Perform fast queries against a massive database of complete GWAS summary data","text":"","code":"gwasinfo()"},{"path":"https://mrcieu.github.io/ieugwasr/articles/guide.html","id":"get-list-of-a-specific-study","dir":"Articles","previous_headings":"","what":"Get list of a specific study","title":"Perform fast queries against a massive database of complete GWAS summary data","text":"","code":"gwasinfo(\"ieu-a-2\")"},{"path":"https://mrcieu.github.io/ieugwasr/articles/guide.html","id":"extract-particular-associations-from-particular-studies","dir":"Articles","previous_headings":"","what":"Extract particular associations from particular studies","title":"Perform fast queries against a massive database of complete GWAS summary data","text":"Provide list variants obtained list studies: default look LD proxies using 1000 genomes reference data (Europeans , reference panel INDELs removed retains SNPs MAF > 0.01). behaviour can turned using proxies=0 argument. Note queries performed rsids, chromosome:position values automatically converted. range query can done using e.g.","code":"associations(variants=c(\"rs123\", \"7:105561135\"), id=c(\"ieu-a-2\", \"ieu-a-7\")) associations(variants=\"7:105561135-105563135\", id=c(\"ieu-a-2\"), proxies=0)"},{"path":"https://mrcieu.github.io/ieugwasr/articles/guide.html","id":"get-the-tophits-from-a-study","dir":"Articles","previous_headings":"","what":"Get the tophits from a study","title":"Perform fast queries against a massive database of complete GWAS summary data","text":"tophits can obtained using Note perform strict clumping default (r2 = 0.001 radius = 10000kb). can turned clump=0.","code":"tophits(id=\"ieu-a-2\")"},{"path":"https://mrcieu.github.io/ieugwasr/articles/guide.html","id":"perform-phewas","dir":"Articles","previous_headings":"","what":"Perform PheWAS","title":"Perform fast queries against a massive database of complete GWAS summary data","text":"Lookup association specified variants across every study, returning particular threshold. Note LD proxy lookups made . PheWAS can also performed specific subsets data. datasets IGD organised batch, can see info : https://gwas.mrcieu.ac.uk/datasets/ get list batches descriptions using: can perform PheWAS specified batches using: default PheWAS performed batches (course somewhat slower).","code":"phewas(variants=\"rs1205\", pval=1e-5) batches() phewas(variants=\"rs1205\", pval=1e-5, batch=c('ieu-a', 'ukb-b'))"},{"path":"https://mrcieu.github.io/ieugwasr/articles/guide.html","id":"ld-clumping","dir":"Articles","previous_headings":"","what":"LD clumping","title":"Perform fast queries against a massive database of complete GWAS summary data","text":"API wrapper around plink version 1.90 can use perform clumping LD reference panel 1000 genomes reference data. 5 super-populations can requested via pop argument. default use Europeans subset (EUR super-population). reference panel INDELs removed retains SNPs MAF > 0.01 selected population. Note can perform operation locally provide path plink bed/bim/fam LD reference dataset. e.g. See following vignette information: Running local LD operations","code":"a <- tophits(id=\"ieu-a-2\", clump=0) b <- ld_clump(     dplyr::tibble(rsid=a$name, pval=a$p, id=a$id) ) ld_clump(     dplyr::tibble(rsid=a$name, pval=a$p, id=a$id),     plink_bin = \"/path/to/plink\",     bfile = \"/path/to/reference_data\" )"},{"path":"https://mrcieu.github.io/ieugwasr/articles/guide.html","id":"ld-matrix","dir":"Articles","previous_headings":"","what":"LD matrix","title":"Perform fast queries against a massive database of complete GWAS summary data","text":"Similarly, matrix LD r values can generated using uses API default limited 500 variants. can use, instead, local plink LD reference data manner ld_clump function, e.g. 5 super-populations can requested via pop argument. default use Europeans subset (EUR super-population). reference panel INDELs removed retains SNPs MAF > 0.01 selected population. Super-populations: EUR = European EAS = East Asian AMR = Admixed American SAS = South Asian AFR = African See following vignette information: Running local LD operations","code":"ld_matrix(b$variant) ld_matrix(b$variant, plink_bin = \"/path/to/plink\", bfile = \"/path/to/reference_data\")"},{"path":"https://mrcieu.github.io/ieugwasr/articles/guide.html","id":"variant-information","dir":"Articles","previous_headings":"","what":"Variant information","title":"Perform fast queries against a massive database of complete GWAS summary data","text":"Translating rsids chromosome:position, also getting information, can achieved. chrpos argument can accept following <chr>:<position> <chr>:<start>-<end> example provides table dbSNP variant IDs, gene info, various metadata. Similar data can obtained searching rsid list variants within particular gene region can also found. Provide ensembl entrez gene ID (e.g. ENSG00000123374 1017) following:","code":"a <- variants_chrpos(c(\"7:105561135-105563135\", \"10:44865737\")) b <- variants_rsid(c(\"rs234\", \"rs333\")) c <- variants_gene(\"ENSG00000123374\")"},{"path":"https://mrcieu.github.io/ieugwasr/articles/guide.html","id":"extracting-gwas-summary-data-based-on-gene-region","dir":"Articles","previous_headings":"","what":"Extracting GWAS summary data based on gene region","title":"Perform fast queries against a massive database of complete GWAS summary data","text":"example obtain summary data datasets gene region. example, ’ll extract CDK2 (HGNC number 1017) BMI dataset (ieu--2) Use mygene bioconductor package query mygene.info API.","code":"library(mygene) a <- mygene::getGene(\"1017\", fields=\"genomic_pos_hg19\") r <- paste0(a[[1]]$genomic_pos_hg19$chr, \":\", a[[1]]$genomic_pos_hg19$start, \"-\", a[[1]]$genomic_pos_hg19$end) b <- ieugwasr::associations(r, \"ieu-a-2\")"},{"path":"https://mrcieu.github.io/ieugwasr/articles/guide.html","id":"genomes-annotations","dir":"Articles","previous_headings":"","what":"1000 genomes annotations","title":"Perform fast queries against a massive database of complete GWAS summary data","text":"OpenGWAS database contains database population annotations 1000 genomes project - alternative allele frequencies LD scores variant, calculated super population separately. variants present MAF > 1% least one super population. can access info different ways Look particular set rsids Look set positions regions Extract annotations list 20k variants common super populations, evenly spaced across genome Extract annotations 1.3 million HapMap3 variants Infer ancestry particular study comparing allele frequencies different super population reference frequencies","code":"ieugwasr::afl2_rsid(c(\"rs234\", \"rs123\")) ieugwasr::afl2_chrpos(\"1:100000-900000\") ieugwasr::afl2_list() ieugwasr::afl2_list(\"hapmap3\") snplist <- ieugwasr::afl2_list() eur_example <- associations(snplist$rsid, \"ieu-a-2\") ieugwasr::infer_ancestry(eur_example, snplist) eas_example <- associations(snplist$rsid, \"bbj-a-10\") ieugwasr::infer_ancestry(eur_example, snplist)"},{"path":"https://mrcieu.github.io/ieugwasr/articles/local_ld.html","id":"ld-clumping","dir":"Articles","previous_headings":"","what":"LD clumping","title":"Running local LD operations","text":"API wrapper around plink version 1.90 can use perform clumping LD reference panel 1000 genomes reference data. 5 super-populations can requested via pop argument. default use Europeans subset (EUR super-population). reference panel INDELs removed retains SNPs MAF > 0.01 selected population. Note can perform operation locally provide path plink bed/bim/fam LD reference dataset. get path plink can following: get LD reference dataset used API, can download directly : http://fileserve.mrcieu.ac.uk/ld/1kg.v3.tgz contains LD reference panel 5 super-populations 1000 genomes reference dataset. e.g. European super population following files: EUR.bed EUR.bim EUR.fam Now supposing R dataframe, dat, following columns: rsid pval trait_id perform clumping, just following:","code":"a <- tophits(id=\"ieu-a-2\", clump=0) b <- ld_clump(     dplyr::tibble(rsid=a$name, pval=a$p, id=a$id) ) devtools::install_github(\"explodecomputer/genetics.binaRies\") genetics.binaRies::get_plink_binary() ld_clump(     dplyr::tibble(rsid=dat$rsid, pval=dat$pval, id=dat$trait_id),     plink_bin = genetics.binaRies::get_plink_binary(),     bfile = \"/path/to/reference/EUR\" )"},{"path":"https://mrcieu.github.io/ieugwasr/articles/local_ld.html","id":"ld-matrix","dir":"Articles","previous_headings":"","what":"LD matrix","title":"Running local LD operations","text":"Similarly, matrix LD r values can generated using uses API default limited 500 variants. can use, instead, local plink LD reference data manner ld_clump function, e.g.","code":"ld_matrix(b$variant) ld_matrix(     dat$rsid,     plink_bin = genetics.binaRies::get_plink_binary(),     bfile = \"/path/to/reference/EUR\" )"},{"path":"https://mrcieu.github.io/ieugwasr/articles/local_ld.html","id":"ld-proxies","dir":"Articles","previous_headings":"","what":"LD proxies","title":"Running local LD operations","text":"automatically extract variants dataset, search LD proxies requested variant present dataset, please look options available gwasvcf package: https://mrcieu.github.io/gwasvcf/articles/guide.html#ld-proxies-1","code":""},{"path":"https://mrcieu.github.io/ieugwasr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gibran Hemani. Author, maintainer, copyright holder. Ben Elsworth. Author. Tom Palmer. Author. Rita Rasteiro. Author.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hemani G, Elsworth B, Palmer T, Rasteiro R (2024). ieugwasr: Interface 'OpenGWAS' Database API. R package version 1.0.0, https://mrcieu.github.io/ieugwasr/, https://github.com/MRCIEU/ieugwasr.","code":"@Manual{,   title = {ieugwasr: Interface to the 'OpenGWAS' Database API},   author = {Gibran Hemani and Ben Elsworth and Tom Palmer and Rita Rasteiro},   year = {2024},   note = {R package version 1.0.0, https://mrcieu.github.io/ieugwasr/},   url = {https://github.com/MRCIEU/ieugwasr}, }"},{"path":"https://mrcieu.github.io/ieugwasr/index.html","id":"perform-fast-queries-in-r-against-a-massive-database-of-complete-gwas-summary-data","dir":"","previous_headings":"","what":"Interface to the OpenGWAS Database API","title":"Interface to the OpenGWAS Database API","text":"OpenGWAS database comprises 50,000 curated, QC’d harmonised complete GWAS summary datasets can queried using API. See documentation API . R package wrapper make generic calls API, plus convenience functions specific queries. Methods currently implemented: Get meta data specific studies Obtain top hits (fly clumping option) GWAS datasets. Clumping significance thresholds can specified Obtain summary results specific variants across specific studies. LD-proxy lookups performed automatically specific variant absent study Query genomic region GWAS dataset, e.g. fine mapping colocalisation analysis Perform PheWAS convenience functions also: Query dbSNP data, allowing conversion chromosome:position rsids getting annotations Perform LD clumping using server, locally Obtain LD matrices list SNPs using server locally (e.g. fine mapping, colocalisation Mendelian randomization) See https://github.com/MRCIEU/gwasglue2 information connect genotype LD data packages involving colocalisation, finemapping, visualisation MR.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interface to the OpenGWAS Database API","text":"Install CRAN using: install developer version ieugwasr : Browse vignettes etc information use package: https://mrcieu.github.io/ieugwasr/","code":"install.packages(\"ieugwasr\") remotes::install_github(\"mrcieu/ieugwasr\")"},{"path":"https://mrcieu.github.io/ieugwasr/reference/afl2_chrpos.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up allele frequencies and LD scores for 1000 genomes populations by chrpos — afl2_chrpos","title":"Look up allele frequencies and LD scores for 1000 genomes populations by chrpos — afl2_chrpos","text":"Look allele frequencies LD scores 1000 genomes populations chrpos","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/afl2_chrpos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up allele frequencies and LD scores for 1000 genomes populations by chrpos — afl2_chrpos","text":"","code":"afl2_chrpos(chrpos, reference = \"1000g\", opengwas_jwt = get_opengwas_jwt())"},{"path":"https://mrcieu.github.io/ieugwasr/reference/afl2_chrpos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up allele frequencies and LD scores for 1000 genomes populations by chrpos — afl2_chrpos","text":"chrpos list <chr>:<pos> build 37, e.g. c(\"3:46414943\", \"3:122991235\"). Also allows ranges e.g \"7:105561135-105563135\" reference Default=\"1000g\" opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/afl2_chrpos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up allele frequencies and LD scores for 1000 genomes populations by chrpos — afl2_chrpos","text":"Data frame containing ancestry specific LD scores allele frequencies variant","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/afl2_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a allele frequency and LD scores for pre-defined lists of variants — afl2_list","title":"Retrieve a allele frequency and LD scores for pre-defined lists of variants — afl2_list","text":"Data frame includes 1000 genomes metadata including sample sizes, allele frequency LD score, separated 5 super populations (EUR = European, AFR = African, EAS = East Asian, AMR = Admixed American, SAS = South Asian)","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/afl2_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a allele frequency and LD scores for pre-defined lists of variants — afl2_list","text":"","code":"afl2_list(   variantlist = c(\"reduced\", \"hapmap3\")[1],   opengwas_jwt = get_opengwas_jwt() )"},{"path":"https://mrcieu.github.io/ieugwasr/reference/afl2_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a allele frequency and LD scores for pre-defined lists of variants — afl2_list","text":"variantlist Choose pre-defined list. reduced = ~20k SNPs common super populations (default). hapmap3 = ~1.3 million hm3 SNPs opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/afl2_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a allele frequency and LD scores for pre-defined lists of variants — afl2_list","text":"Data frame containing ancestry specific LD scores allele frequencies variant","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/afl2_rsid.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up allele frequencies and LD scores for 1000 genomes populations by rsid — afl2_rsid","title":"Look up allele frequencies and LD scores for 1000 genomes populations by rsid — afl2_rsid","text":"Look allele frequencies LD scores 1000 genomes populations rsid","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/afl2_rsid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up allele frequencies and LD scores for 1000 genomes populations by rsid — afl2_rsid","text":"","code":"afl2_rsid(rsid, reference = \"1000g\", opengwas_jwt = get_opengwas_jwt())"},{"path":"https://mrcieu.github.io/ieugwasr/reference/afl2_rsid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up allele frequencies and LD scores for 1000 genomes populations by rsid — afl2_rsid","text":"rsid Vector rsids reference Default=\"1000g\" opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/afl2_rsid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up allele frequencies and LD scores for 1000 genomes populations by rsid — afl2_rsid","text":"Data frame containing ancestry specific LD scores allele frequencies variant","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/api_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for sending queries and payloads to API — api_query","title":"Wrapper for sending queries and payloads to API — api_query","text":"number different GET POST endpoints GWAS database API. generic way access .","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/api_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for sending queries and payloads to API — api_query","text":"","code":"api_query(   path,   query = NULL,   opengwas_jwt = get_opengwas_jwt(),   method = \"GET\",   silent = TRUE,   encode = \"json\",   timeout = 300 )"},{"path":"https://mrcieu.github.io/ieugwasr/reference/api_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for sending queries and payloads to API — api_query","text":"path Either full query path (e.g. get) endpoint (e.g. post) queries query post query, provide list arguments payload. NULL default opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT. method \"GET\" (default) \"POST\", \"DELETE\" etc silent TRUE/FALSE passed httr call. TRUE default encode Default = \"json\", see httr::POST options timeout Default = 300, avoid increasing , preferentially simplify query first.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/api_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for sending queries and payloads to API — api_query","text":"httr response object","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/api_status.html","id":null,"dir":"Reference","previous_headings":"","what":"MR-Base server status — api_status","title":"MR-Base server status — api_status","text":"MR-Base server status","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/api_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MR-Base server status — api_status","text":"","code":"api_status()"},{"path":"https://mrcieu.github.io/ieugwasr/reference/api_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MR-Base server status — api_status","text":"list values regarding status","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/associations.html","id":null,"dir":"Reference","previous_headings":"","what":"Query specific variants from specific GWAS — associations","title":"Query specific variants from specific GWAS — associations","text":"Every rsid searched requested GWAS id. get list available GWAS ids, find meta data, use gwasinfo. Can request LD proxies instances requested rsid present particular GWAS dataset. currently uses LD reference panel composed Europeans 1000 genomes version 3. also restricted biallelic single nucleotide polymorphisms (indels), European MAF > 0.01.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/associations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query specific variants from specific GWAS — associations","text":"","code":"associations(   variants,   id,   proxies = 1,   r2 = 0.8,   align_alleles = 1,   palindromes = 1,   maf_threshold = 0.3,   opengwas_jwt = get_opengwas_jwt() )"},{"path":"https://mrcieu.github.io/ieugwasr/reference/associations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query specific variants from specific GWAS — associations","text":"variants Array variants e.g. c(\"rs234\", \"7:105561135-105563135\") id Array GWAS studies query. See gwasinfo available studies proxies 0 (default) 1 - indicating whether look proxies r2 Minimum proxy LD rsq value. Default=0.8 align_alleles Try align tag alleles target alleles (proxies = 1). 1 = yes (default), 0 = palindromes Allow palindromic SNPs (proxies = 1). 1 = yes (default), 0 = maf_threshold MAF threshold try infer palindromic SNPs. Default = 0.3. opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/associations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query specific variants from specific GWAS — associations","text":"Dataframe","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/batch_from_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract batch name from study ID — batch_from_id","title":"Extract batch name from study ID — batch_from_id","text":"Extract batch name study ID","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/batch_from_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract batch name from study ID — batch_from_id","text":"","code":"batch_from_id(id)"},{"path":"https://mrcieu.github.io/ieugwasr/reference/batch_from_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract batch name from study ID — batch_from_id","text":"id Array study IDs","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/batch_from_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract batch name from study ID — batch_from_id","text":"Array batch names","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/batches.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of data batches in IEU GWAS database — batches","title":"Get list of data batches in IEU GWAS database — batches","text":"Get list data batches IEU GWAS database","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/batches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of data batches in IEU GWAS database — batches","text":"","code":"batches(opengwas_jwt = get_opengwas_jwt())"},{"path":"https://mrcieu.github.io/ieugwasr/reference/batches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of data batches in IEU GWAS database — batches","text":"opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/batches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of data batches in IEU GWAS database — batches","text":"data frame","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/check_access_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if authentication has been maded — check_access_token","title":"Check if authentication has been maded — check_access_token","text":"Deprectated. Use get_opengwas_jwt() instead. See https://mrcieu.github.io/ieugwasr/articles/guide.html#authentication information.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/check_access_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if authentication has been maded — check_access_token","text":"","code":"check_access_token()"},{"path":"https://mrcieu.github.io/ieugwasr/reference/check_access_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if authentication has been maded — check_access_token","text":"NULL access_token depending current authentication state","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/editcheck.html","id":null,"dir":"Reference","previous_headings":"","what":"Check datasets that are in process of being uploaded — editcheck","title":"Check datasets that are in process of being uploaded — editcheck","text":"Check datasets process uploaded","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/editcheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check datasets that are in process of being uploaded — editcheck","text":"","code":"editcheck(id, opengwas_jwt = get_opengwas_jwt())"},{"path":"https://mrcieu.github.io/ieugwasr/reference/editcheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check datasets that are in process of being uploaded — editcheck","text":"id ID opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/editcheck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check datasets that are in process of being uploaded — editcheck","text":"Dataframe","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/fill_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up sample sizes when meta data is missing from associations — fill_n","title":"Look up sample sizes when meta data is missing from associations — fill_n","text":"Look sample sizes meta data missing associations","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/fill_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up sample sizes when meta data is missing from associations — fill_n","text":"","code":"fill_n(d, opengwas_jwt = get_opengwas_jwt())"},{"path":"https://mrcieu.github.io/ieugwasr/reference/fill_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up sample sizes when meta data is missing from associations — fill_n","text":"d Output associations opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/fill_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up sample sizes when meta data is missing from associations — fill_n","text":"Updated version d","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/get_opengwas_jwt.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve OpenGWAS JSON Web Token from .Renviron file — get_opengwas_jwt","title":"Retrieve OpenGWAS JSON Web Token from .Renviron file — get_opengwas_jwt","text":"Retrieve OpenGWAS JSON Web Token .Renviron file","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/get_opengwas_jwt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve OpenGWAS JSON Web Token from .Renviron file — get_opengwas_jwt","text":"","code":"get_opengwas_jwt()"},{"path":"https://mrcieu.github.io/ieugwasr/reference/get_opengwas_jwt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve OpenGWAS JSON Web Token from .Renviron file — get_opengwas_jwt","text":"JWT string","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/get_query_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse out json response from httr object — get_query_content","title":"Parse out json response from httr object — get_query_content","text":"Parse json response httr object","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/get_query_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse out json response from httr object — get_query_content","text":"","code":"get_query_content(response)"},{"path":"https://mrcieu.github.io/ieugwasr/reference/get_query_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse out json response from httr object — get_query_content","text":"response Output httr","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/get_query_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse out json response from httr object — get_query_content","text":"Parsed json output query, often form data frame. status code successful return actual response","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/gwasinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of studies with available GWAS summary statistics through API — gwasinfo","title":"Get list of studies with available GWAS summary statistics through API — gwasinfo","text":"Get list studies available GWAS summary statistics API","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/gwasinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of studies with available GWAS summary statistics through API — gwasinfo","text":"","code":"gwasinfo(id = NULL, opengwas_jwt = get_opengwas_jwt())"},{"path":"https://mrcieu.github.io/ieugwasr/reference/gwasinfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of studies with available GWAS summary statistics through API — gwasinfo","text":"id List MR-Base IDs retrieve. NULL (default) retrieves available datasets opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/gwasinfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of studies with available GWAS summary statistics through API — gwasinfo","text":"Dataframe details available studies","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/infer_ancestry.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer ancestry of GWAS dataset by matching against 1000 genomes allele frequencies — infer_ancestry","title":"Infer ancestry of GWAS dataset by matching against 1000 genomes allele frequencies — infer_ancestry","text":"Uses ~20k SNPs selected common frequency across 5 major super populations","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/infer_ancestry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer ancestry of GWAS dataset by matching against 1000 genomes allele frequencies — infer_ancestry","text":"","code":"infer_ancestry(d, snpinfo = NULL, opengwas_jwt = get_opengwas_jwt())"},{"path":"https://mrcieu.github.io/ieugwasr/reference/infer_ancestry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer ancestry of GWAS dataset by matching against 1000 genomes allele frequencies — infer_ancestry","text":"d Data frame containing least rsid eaf columns. e.g. output associations snpinfo Output afl2_list, afl2_rsid afl2_chrpos. NULL afl2_list() used default opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/infer_ancestry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer ancestry of GWAS dataset by matching against 1000 genomes allele frequencies — infer_ancestry","text":"data frame ordered likely ancestry, row represents super population cor column represents correlation GWAS dataset 1000 genomes super population allele frequencies","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_clump.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform LD clumping on SNP data — ld_clump","title":"Perform LD clumping on SNP data — ld_clump","text":"Uses PLINK clumping method, SNPs LD within particular window pruned. SNP lowest p-value retained.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_clump.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform LD clumping on SNP data — ld_clump","text":"","code":"ld_clump(   dat = NULL,   clump_kb = 10000,   clump_r2 = 0.001,   clump_p = 0.99,   pop = \"EUR\",   opengwas_jwt = get_opengwas_jwt(),   bfile = NULL,   plink_bin = NULL )"},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_clump.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform LD clumping on SNP data — ld_clump","text":"dat Dataframe. Must variant name column (rsid) pval column called pval. id present clumping done per unique id. clump_kb Clumping kb window. Default strict, 10000 clump_r2 Clumping r2 threshold. Default strict, 0.001 clump_p Clumping sig level index variants. Default = 1 (.e. threshold) pop Super-population use reference panel. Default = \"EUR\". Options \"EUR\", \"SAS\", \"EAS\", \"AFR\", \"AMR\". 'legacy' also available - previously used verison EUR panel slightly different set markers opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.#' bfile provided use API. Default = NULL plink_bin NULL bfile NULL detect packaged plink binary specific OS. Otherwise specify path plink binary. Default = NULL","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_clump.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform LD clumping on SNP data — ld_clump","text":"Data frame","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_clump.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform LD clumping on SNP data — ld_clump","text":"function interacts OpenGWAS API, houses LD reference panels 5 super-populations 1000 genomes reference panel. includes bi-allelic SNPs MAF > 0.01, quite possible variant want include clumping process absent. absent, automatically excluded results. can check variants present LD reference panel using ld_reflookup(). function put load OpenGWAS servers, makes life difficult users. implemented method made available LD reference panels perform clumping locally, see ld_clump() related vignettes details.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_clump_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform clumping on the chosen variants using through API — ld_clump_api","title":"Perform clumping on the chosen variants using through API — ld_clump_api","text":"Perform clumping chosen variants using API","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_clump_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform clumping on the chosen variants using through API — ld_clump_api","text":"","code":"ld_clump_api(   dat,   clump_kb = 10000,   clump_r2 = 0.1,   clump_p,   pop = \"EUR\",   opengwas_jwt = get_opengwas_jwt() )"},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_clump_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform clumping on the chosen variants using through API — ld_clump_api","text":"dat Dataframe. Must variant name column (variant) pval column called pval. id present clumping done per unique id. clump_kb Clumping kb window. Default strict, 10000 clump_r2 Clumping r2 threshold. Default strict, 0.001 clump_p Clumping sig level index variants. Default = 1 (.e. threshold) pop Super-population use reference panel. Default = \"EUR\". Options \"EUR\", \"SAS\", \"EAS\", \"AFR\", \"AMR\" opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.#' @param bfile provided use API. Default = NULL","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_clump_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform clumping on the chosen variants using through API — ld_clump_api","text":"Data frame independent variants","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_clump_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for clump function using local plink binary and ld reference dataset — ld_clump_local","title":"Wrapper for clump function using local plink binary and ld reference dataset — ld_clump_local","text":"Wrapper clump function using local plink binary ld reference dataset","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_clump_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for clump function using local plink binary and ld reference dataset — ld_clump_local","text":"","code":"ld_clump_local(dat, clump_kb, clump_r2, clump_p, bfile, plink_bin)"},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_clump_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for clump function using local plink binary and ld reference dataset — ld_clump_local","text":"dat Dataframe. Must variant name column (variant) pval column called pval. id present clumping done per unique id. clump_kb Clumping kb window. Default strict, 10000 clump_r2 Clumping r2 threshold. Default strict, 0.001 clump_p Clumping sig level index variants. Default = 1 (.e. threshold) bfile provided use API. Default = NULL plink_bin Specify path plink binary. Default = NULL. See https://github.com/explodecomputer/plinkbinr convenient access plink binaries","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_clump_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for clump function using local plink binary and ld reference dataset — ld_clump_local","text":"data frame clumped variants","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Get LD matrix for list of SNPs — ld_matrix","title":"Get LD matrix for list of SNPs — ld_matrix","text":"function takes list SNPs searches specified super-population 1000 Genomes phase 3 reference panel. creates LD matrix r values (signed, squared). LD values respect major alleles 1000G dataset. can specify whether allele names displayed.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get LD matrix for list of SNPs — ld_matrix","text":"","code":"ld_matrix(   variants,   with_alleles = TRUE,   pop = \"EUR\",   opengwas_jwt = get_opengwas_jwt(),   bfile = NULL,   plink_bin = NULL )"},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get LD matrix for list of SNPs — ld_matrix","text":"variants List variants (rsids) with_alleles Whether append allele names SNP names. Default: TRUE pop Super-population use reference panel. Default = \"EUR\". Options \"EUR\", \"SAS\", \"EAS\", \"AFR\", \"AMR\". 'legacy' also available - previously used verison EUR panel slightly different set markers opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.#' @param bfile provided use API. Default = NULL bfile provided use API. Default = NULL plink_bin NULL bfile NULL detect packaged plink binary specific OS. Otherwise specify path plink binary. Default = NULL","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get LD matrix for list of SNPs — ld_matrix","text":"Matrix LD r values","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get LD matrix for list of SNPs — ld_matrix","text":"data used generating LD matrix includes bi-allelic SNPs MAF > 0.01, quite possible variant want include absent. absent, automatically excluded results. can check variants present LD reference panel using ld_reflookup() function put load OpenGWAS servers, makes life difficult users, limited analyse 500 variants time. implemented method made available LD reference panels perform operation locally, see ld_matrix() related vignettes details.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_matrix_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Get LD matrix using local plink binary and reference dataset — ld_matrix_local","title":"Get LD matrix using local plink binary and reference dataset — ld_matrix_local","text":"Get LD matrix using local plink binary reference dataset","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_matrix_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get LD matrix using local plink binary and reference dataset — ld_matrix_local","text":"","code":"ld_matrix_local(variants, bfile, plink_bin, with_alleles = TRUE)"},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_matrix_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get LD matrix using local plink binary and reference dataset — ld_matrix_local","text":"variants List variants (rsids) bfile Path bed/bim/fam ld reference panel plink_bin Specify path plink binary. Default = NULL. See https://github.com/explodecomputer/plinkbinr convenient access plink binaries with_alleles Whether append allele names SNP names. Default: TRUE","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_matrix_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get LD matrix using local plink binary and reference dataset — ld_matrix_local","text":"data frame","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_reflookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Check which rsids are present in a remote LD reference panel — ld_reflookup","title":"Check which rsids are present in a remote LD reference panel — ld_reflookup","text":"Provide list rsids may want perform LD operations check present LD reference panel. functions e.g. ld_clump exclude analysis, may want consider handle variants data.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_reflookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check which rsids are present in a remote LD reference panel — ld_reflookup","text":"","code":"ld_reflookup(rsid, pop = \"EUR\", opengwas_jwt = get_opengwas_jwt())"},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_reflookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check which rsids are present in a remote LD reference panel — ld_reflookup","text":"rsid Array rsids check pop Super-population use reference panel. Default = \"EUR\". Options \"EUR\", \"SAS\", \"EAS\", \"AFR\", \"AMR\" opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.#' @param bfile provided use API. Default = NULL","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/ld_reflookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check which rsids are present in a remote LD reference panel — ld_reflookup","text":"Array rsids present LD reference panel","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/legacy_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert current IDs to legacy IDs — legacy_ids","title":"Convert current IDs to legacy IDs — legacy_ids","text":"Convert current IDs legacy IDs","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/legacy_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert current IDs to legacy IDs — legacy_ids","text":"","code":"legacy_ids(x)"},{"path":"https://mrcieu.github.io/ieugwasr/reference/legacy_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert current IDs to legacy IDs — legacy_ids","text":"x Vector ids","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/legacy_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert current IDs to legacy IDs — legacy_ids","text":"vector back compatible ids","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/logging_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Details of how access token logs are used — logging_info","title":"Details of how access token logs are used — logging_info","text":"Details access token logs used","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/logging_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Details of how access token logs are used — logging_info","text":"","code":"logging_info()"},{"path":"https://mrcieu.github.io/ieugwasr/reference/logging_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Details of how access token logs are used — logging_info","text":"return value, called side effects","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/phewas.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform fast phewas of a specific variants against all available GWAS datasets — phewas","title":"Perform fast phewas of a specific variants against all available GWAS datasets — phewas","text":"faster manually associations","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/phewas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform fast phewas of a specific variants against all available GWAS datasets — phewas","text":"","code":"phewas(variants, pval = 1e-05, batch = c(), opengwas_jwt = get_opengwas_jwt())"},{"path":"https://mrcieu.github.io/ieugwasr/reference/phewas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform fast phewas of a specific variants against all available GWAS datasets — phewas","text":"variants Array variants e.g. c(\"rs234\", \"7:105561135-105563135\") pval p-value threshold. Default = 0.00001 batch Vector batch IDs search across. c() (default) returns batches opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/phewas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform fast phewas of a specific variants against all available GWAS datasets — phewas","text":"Dataframe","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/print.ApiStatus.html","id":null,"dir":"Reference","previous_headings":"","what":"Print API status — print.ApiStatus","title":"Print API status — print.ApiStatus","text":"Print API status","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/print.ApiStatus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print API status — print.ApiStatus","text":"","code":"# S3 method for ApiStatus print(x, ...)"},{"path":"https://mrcieu.github.io/ieugwasr/reference/print.ApiStatus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print API status — print.ApiStatus","text":"x Output api_status ... Unused, extensibility","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/print.ApiStatus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print API status — print.ApiStatus","text":"Print API status","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/print.GwasInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Print GWAS information — print.GwasInfo","title":"Print GWAS information — print.GwasInfo","text":"Print GWAS information","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/print.GwasInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print GWAS information — print.GwasInfo","text":"","code":"# S3 method for GwasInfo print(x, ...)"},{"path":"https://mrcieu.github.io/ieugwasr/reference/print.GwasInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print GWAS information — print.GwasInfo","text":"x Output gwasinfo ... Unused, extensibility","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/print.GwasInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print GWAS information — print.GwasInfo","text":"Print GWAS information","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/select_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Toggle API address between development and release — select_api","title":"Toggle API address between development and release — select_api","text":"Toggle API address development release","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/select_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toggle API address between development and release — select_api","text":"","code":"select_api(where = \"public\", silent = FALSE)"},{"path":"https://mrcieu.github.io/ieugwasr/reference/select_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Toggle API address between development and release — select_api","text":"API use. Choice \"public\", \"private\", \"dev1\", \"dev2\". Default = \"public\". silent Silent? Default = FALSE","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/select_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Toggle API address between development and release — select_api","text":"return value, called side effects","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/tophits.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain top hits from a GWAS dataset — tophits","title":"Obtain top hits from a GWAS dataset — tophits","text":"default performs clumping server side.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/tophits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain top hits from a GWAS dataset — tophits","text":"","code":"tophits(   id,   pval = 5e-08,   clump = 1,   r2 = 0.001,   kb = 10000,   pop = \"EUR\",   force_server = FALSE,   opengwas_jwt = get_opengwas_jwt() )"},{"path":"https://mrcieu.github.io/ieugwasr/reference/tophits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain top hits from a GWAS dataset — tophits","text":"id Array GWAS studies query. See gwasinfo available studies pval use p-value threshold. Default = 5e-8 clump whether clump (1) (0). Default = 1 r2 use clumping r2 threshold. Default strict, 0.001 kb use clumping kb window. Default strict, 10000 pop Super-population use reference panel. Default = \"EUR\". Options \"EUR\", \"SAS\", \"EAS\", \"AFR\", \"AMR\" force_server Logical. default return preclumped hits. p-value threshold 5e-8, r2 threshold 0.001 kb threshold 10000, using SNPs MAF > 0.01 European samples 1000 genomes. force_server = TRUE recompute using server side LD reference panel. opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/tophits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain top hits from a GWAS dataset — tophits","text":"Dataframe","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/user.html","id":null,"dir":"Reference","previous_headings":"","what":"Get user details — user","title":"Get user details — user","text":"Get user details","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get user details — user","text":"","code":"user(opengwas_jwt = get_opengwas_jwt())"},{"path":"https://mrcieu.github.io/ieugwasr/reference/user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get user details — user","text":"opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get user details — user","text":"user information","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_chrpos.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain information about chr pos and surrounding region — variants_chrpos","title":"Obtain information about chr pos and surrounding region — variants_chrpos","text":"list chromosome positions, finds variants within given radius","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_chrpos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain information about chr pos and surrounding region — variants_chrpos","text":"","code":"variants_chrpos(chrpos, radius = 0, opengwas_jwt = get_opengwas_jwt())"},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_chrpos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain information about chr pos and surrounding region — variants_chrpos","text":"chrpos list <chr>:<pos> build 37, e.g. c(\"3:46414943\", \"3:122991235\"). Also allows ranges e.g. \"7:105561135-105563135\" radius Radius around chrpos, default = 0 opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_chrpos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain information about chr pos and surrounding region — variants_chrpos","text":"Data frame","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain variants around a gene — variants_gene","title":"Obtain variants around a gene — variants_gene","text":"Provide gene identified, either Ensembl Entrez","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain variants around a gene — variants_gene","text":"","code":"variants_gene(gene, radius = 0, opengwas_jwt = get_opengwas_jwt())"},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_gene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain variants around a gene — variants_gene","text":"gene Vector genes, either Ensembl Entrez, e.g. c(\"ENSG00000123374\", \"ENSG00000160791\") 1017 radius Radius around gene region include. Default = 0 opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_gene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain variants around a gene — variants_gene","text":"data frame following columns","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_rsid.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain information about rsid — variants_rsid","title":"Obtain information about rsid — variants_rsid","text":"Obtain information rsid","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_rsid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain information about rsid — variants_rsid","text":"","code":"variants_rsid(rsid, opengwas_jwt = get_opengwas_jwt())"},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_rsid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain information about rsid — variants_rsid","text":"rsid Vector rsids opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_rsid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain information about rsid — variants_rsid","text":"data frame","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_to_rsid.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert mixed array of rsid and chrpos to list of rsid — variants_to_rsid","title":"Convert mixed array of rsid and chrpos to list of rsid — variants_to_rsid","text":"Convert mixed array rsid chrpos list rsid","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_to_rsid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert mixed array of rsid and chrpos to list of rsid — variants_to_rsid","text":"","code":"variants_to_rsid(variants, opengwas_jwt = get_opengwas_jwt())"},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_to_rsid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert mixed array of rsid and chrpos to list of rsid — variants_to_rsid","text":"variants Array variants e.g. c(\"rs234\", \"7:105561135-105563135\") opengwas_jwt Used authenticate protected endpoints. Login https://api.opengwas.io obtain jwt. Provide jwt string , store .Renviron keyname OPENGWAS_JWT.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/reference/variants_to_rsid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert mixed array of rsid and chrpos to list of rsid — variants_to_rsid","text":"list rsids","code":""},{"path":"https://mrcieu.github.io/ieugwasr/news/index.html","id":"ieugwasr-100","dir":"Changelog","previous_headings":"","what":"ieugwasr 1.0.0","title":"ieugwasr 1.0.0","text":"CRAN release: 2024-04-22 Introducing JWT authorisation API Phasing Google Oauth2 authorisation Added user() function get user information Fixing issue anonymous functions backwards compatibility Bug tophits result empty Removing version check startup Bug querying errors returned Removing unnecessary dependancies vignettes","code":""},{"path":"https://mrcieu.github.io/ieugwasr/news/index.html","id":"ieugwasr-022","dir":"Changelog","previous_headings":"","what":"ieugwasr 0.2.2","title":"ieugwasr 0.2.2","text":"CRAN release: 2024-03-28 Reinstating https://api.opengwas.org/api/ API server address Fixing issues tests failing server load issue","code":""},{"path":"https://mrcieu.github.io/ieugwasr/news/index.html","id":"ieugwasr-021","dir":"Changelog","previous_headings":"","what":"ieugwasr 0.2.1","title":"ieugwasr 0.2.1","text":"Updating API server address temporarily Modifying tests manage API server load Fixes load/attach behaviour","code":""},{"path":"https://mrcieu.github.io/ieugwasr/news/index.html","id":"ieugwasr-020","dir":"Changelog","previous_headings":"","what":"ieugwasr 0.2.0","title":"ieugwasr 0.2.0","text":"CRAN release: 2024-03-25 Moving API address https://api.opengwas.org/api/ Fixing issues CRAN release","code":""},{"path":"https://mrcieu.github.io/ieugwasr/news/index.html","id":"ieugwasr-017","dir":"Changelog","previous_headings":"","what":"ieugwasr 0.1.7","title":"ieugwasr 0.1.7","text":"Added functions write LD scores files compressed .gz files super-population divided chromosomes. Added argument output gwasglue2 objects ieugwasr::tophits() ieugwasr::associations().","code":""},{"path":"https://mrcieu.github.io/ieugwasr/news/index.html","id":"ieugwasr-016","dir":"Changelog","previous_headings":"","what":"ieugwasr 0.1.6","title":"ieugwasr 0.1.6","text":"Adding messaging package version Adding messaging OpenGWAS # ieugwasr 0.1.5 Added options perform LD functions different super-populations Catching 503 error codes retrying 5 times. help avoid fails server busy.","code":""},{"path":"https://mrcieu.github.io/ieugwasr/news/index.html","id":"ieugwasr-014","dir":"Changelog","previous_headings":"","what":"ieugwasr 0.1.4","title":"ieugwasr 0.1.4","text":"Bug fixes clumping. Thanks bethleegy pointing ","code":""},{"path":"https://mrcieu.github.io/ieugwasr/news/index.html","id":"ieugwasr-013","dir":"Changelog","previous_headings":"","what":"ieugwasr 0.1.3","title":"ieugwasr 0.1.3","text":"Bug fixes clumping","code":""},{"path":"https://mrcieu.github.io/ieugwasr/news/index.html","id":"ieugwasr-012","dir":"Changelog","previous_headings":"","what":"ieugwasr 0.1.2","title":"ieugwasr 0.1.2","text":"Updated API address","code":""},{"path":"https://mrcieu.github.io/ieugwasr/news/index.html","id":"ieugwasr-011","dir":"Changelog","previous_headings":"","what":"ieugwasr 0.1.1","title":"ieugwasr 0.1.1","text":"Fixed bug ld_clump - wasn’t traits","code":""},{"path":"https://mrcieu.github.io/ieugwasr/news/index.html","id":"ieugwasr-010","dir":"Changelog","previous_headings":"","what":"ieugwasr 0.1.0","title":"ieugwasr 0.1.0","text":"First release conjunction API","code":""},{"path":"https://mrcieu.github.io/ieugwasr/news/index.html","id":"ieugwasr-0009000","dir":"Changelog","previous_headings":"","what":"ieugwasr 0.0.0.9000","title":"ieugwasr 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
